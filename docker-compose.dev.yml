services:
  chat-db:
    image: postgres:17.4-alpine
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - chat-data:/var/lib/postgresql/data
    networks:
      - chat_network

  chat-redis:
    image: redis:7.4.0
    container_name: chat-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - '6379:6379'
    volumes:
      - chat-session:/data
    networks:
      - chat_network

  rabbitmq:
    image: rabbitmq:4-alpine
    container_name: chat-rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - chat_network

  envoy:
    image: envoyproxy/envoy:v1.33-latest
    container_name: chat-envoy
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
    ports:
      - '8080:8080'
      - '9901:9901'
    networks:
      - chat_network

  chat-api-1:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app
    ports:
      - '3001:3001'
    depends_on:
      - chat-db
      - chat-redis
      - rabbitmq
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=chat-db
      - REDIS_HOST=chat-redis
      - APP_PORT=3001
      - INSTANCE_NAME=node-hcm-1
    networks:
      - chat_network

  chat-api-2:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app
    ports:
      - '3002:3002'
    depends_on:
      - chat-db
      - chat-redis
      - rabbitmq
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=chat-db
      - REDIS_HOST=chat-redis
      - APP_PORT=3002
      - INSTANCE_NAME=node-hcm-2
    networks:
      - chat_network

  chat-mongo:
      image: mongo:7.0.5
      container_name: chat-mongo
      restart: always
      ports:
        - "27017:27017"
      environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
        MONGO_INITDB_DATABASE: ${MONGO_DB}
      volumes:
        - chat-mongo-data:/data/db
      networks:
        - chat_network
networks:
  chat_network:
    driver: bridge

volumes:
  chat-data:
  chat-session:
  chat-mongo-data:
